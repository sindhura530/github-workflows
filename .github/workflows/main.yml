name: CI and CD Pipeline

on:     
  workflow_dispatch:
  
jobs:
  inputs:
     uses: chaithragudimalla/Project/.github/workflows/pipelineconfig.yaml@main
     
  check:
     needs: inputs
     if: "contains(needs.inputs.outputs.buildTool, 'maven')"
     uses: chaithragudimalla/Project/.github/workflows/maven.yaml@main
     
  check1:
    needs: inputs
    if: "contains(needs.inputs.outputs.buildTool, 'npm') && contains(needs.inputs.outputs.language, 'java') && contains(needs.inputs.outputs.javaVersion, 1.8)"
    uses: chaithragudimalla/Project/.github/workflows/npm.yaml@main
    with:
      image_name: ubuntu
    secrets:
       registry_username: ${{ secrets.REGISTRY_USERNAME }}
       registry_password: ${{ secrets.REGISTRY_PASSWORD }}
  check2:
    needs: inputs
    if: "contains(needs.inputs.outputs.buildTool, 'ng')"
    uses: chaithragudimalla/Project/.github/workflows/ng.yaml@main
  Code-Quality:
    runs-on: ubuntu-latest
    needs: check1
    steps:
       - uses: actions/checkout@v3
       - name: code Analysis
         run: echo 'mvn sonar:sonar'
          
  security-scan:
    needs: Code-Quality
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    #needs: Code-Quality
    steps:
       - uses: actions/checkout@v3
       - name: scanning
         run: echo 'scanning'
         
  Quality-Gates:
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
       - uses: actions/checkout@v3
       - name: CodeAnalysis_Quality_gates
         run: echo 'code analysis quality gates'
       - name: SecurityAnalysis_Quality_gates
         run: echo 'security analysis quality gates'
         
  ChangeRequest_Validation:
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Quality-Gates
    steps:
      - uses: actions/checkout@v3
      - name: validations status
        run: echo 'ChangeRequest Validation "performed"'
    
  Deploy_Develop:
    if: github.event.ref == 'refs/heads/feature'
    runs-on: ubuntu-latest
    environment: 
      name: Development 
    needs: Quality-Gates
    steps:
       - uses: actions/checkout@v3
       - name: deploying
         run: echo 'feature branch'
         
  Deploy_Stage:
    if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: 
      name: Staging 
    needs: Quality-Gates
    steps:
       - uses: actions/checkout@v3
       - name: deploying into develop branch
         run: echo 'develop branch'
         
  Deploy_PROD:
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: Production
    needs: [ChangeRequest_Validation]
    steps:
       - uses: actions/checkout@v3
       - name: deploying to Prod
         run: echo 'master branch'
