name: CI and CD pipeline
on:
  #push: 
     #branches: [feature, develop, main]
  pull_request: 
     branches: [feature, develop, main]
  
  
jobs:
  inputs:
     uses: sindhura530/github-workflows/.github/workflows/pipelineConfig.yml@feature
     
  check_maven:
     needs: inputs
     if: "contains(needs.inputs.outputs.buildTool, 'maven') && contains(needs.inputs.outputs.language, 'java')"
     uses: sindhura530/github-workflows/.github/workflows/maven.yml@feature  
     with:
       javaVersion: '12'
       
  check_npm:
    needs: inputs
    if: "contains(needs.inputs.outputs.buildTool, 'npm') && contains(needs.inputs.outputs.language, 'java') && contains(needs.inputs.outputs.javaVersion, 1.8)"
    uses: sindhura530/github-workflows/.github/workflows/npm.yml@feature
    with:
      image_name: ubuntu
    secrets:
       registry_username: ${{ secrets.REGISTRY_USERNAME }}
       registry_password: ${{ secrets.REGISTRY_PASSWORD }}
       

  Code-Quality:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [check_maven, check_npm]
    runs-on: ubuntu-latest
    container: 
      image: openjdk:11

    steps:
       - uses: actions/checkout@v3
       - name: code Analysis
         run: echo 'mvn sonar:sonar'
       - name: Download artifacts
         uses: actions/download-artifact@v2
         with:
           name: artifact2
           
          
  security-scan:
    if: ${{ always() }}
    needs: [Code-Quality]
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v3
       - name: scanning
         run: echo 'scanning'
         
  Quality-Gates:
    if: ${{ always() }}
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: [security-scan]
    steps:
       - uses: actions/checkout@v3
       - name: CodeAnalysis_Quality_gates
         run: echo 'code analysis quality gates'
       - name: SecurityAnalysis_Quality_gates
         run: echo 'security analysis quality gates'
         
  ChangeRequest_Validation:
    if: ${{ always() && github.event.ref == 'refs/heads/main' }}
    needs: [Quality-Gates]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: validations status
        run: echo 'ChangeRequest Validation "performed"'
    
  Deploy_Dev:
    if: ${{ always() && github.event.ref == 'refs/heads/feature' }}
    needs: [Quality-Gates]
    runs-on: ubuntu-latest
    environment: 
      name: Development 
      url: sindhura530/github-workflows@feature
    steps:
      - name: deploying 
        run: |
             echo " **************************************** "
             echo " dev deployment Finished: SUCCESS "
             echo " **************************************** "
      - name: checking out code
        uses: actions/checkout@v2
        
      - name: extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Update author information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR
     

      - name: Raise PR 
        uses: peter-evans/create-pull-request@v3
        with:
          branch: "develop"
          base: feature
          title: "auto PR from feature to develop"
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          body:
            PR creation
          token: ${{ secrets.GITHUB_TOKEN }}
          
          
  Deploy_Stage:
    if: ${{ always() && github.event.ref == 'refs/heads/develop' }}
    needs: [Quality-Gates]
    runs-on: ubuntu-latest
    environment: 
      name: Staging 
      url: sindhura530/github-workflows@develop
    steps:
      - name: deploying
        run: |
             echo " **************************************** "
             echo " stage deployment Finished: SUCCESS"
             echo " **************************************** "
      - name: checking out code
        uses: actions/checkout@v2
        
      - name: extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Update author information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR
     

      - name: Raise PR 
        uses: peter-evans/create-pull-request@v3
        with:
          branch: "main"
          base: develop
          title: "Auto PR from develop to main"
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          body:
            PR creation
          token: ${{ secrets.GITHUB_TOKEN }}
         
          
  Deploy_PROD:
    if: ${{ always() && github.event.ref == 'refs/heads/main' }}
    needs: [ChangeRequest_Validation]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: sindhura530/github-workflows@main
    steps:
      - name: deploying
        run: |
             echo " **************************************** "
             echo " prod deployment Finished: SUCCESS "
             echo " **************************************** "
